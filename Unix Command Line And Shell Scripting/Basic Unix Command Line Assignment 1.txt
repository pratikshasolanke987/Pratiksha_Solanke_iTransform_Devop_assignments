
Assignments:-

1)List the contents of a directory and their attributes
ANS:For listing the contents of the directory and attribute use command $ls

2)Long list the content with file, directory ownership, permissions,sizes, etc…
Ans: $ ls -l command summarizes all the information of file.

3)Display the size of the file in human readable format
Ans:$ls -lh command is used to display the size of file in human readable format.

4)Show all files and folders including hidden one
Ans:a)$ls -a:shows all files including hidden as well as the files which begins with(.)
       b)$ls -al:shows all files including hidden as well as the files which begins with(.)

5)list directories recursively
Ans:  $ls -R command

6)Sort the files by size with largest at the top
Ans: $ls -laSh command will show all the files according to the size.

7)Sort the files by last time modified displaying the newest first.
Ans:   $ls -lt command

8)Display the location of a program/command, where it is installed.
Ans:   $realpath <name>

9)Which command is used to switch directory from one to another
Ans:  $cd  (directory name)- here cd is change directory which will change the directory from one to another and computer is the directory name.

10)List all the environment variables set for the current shell environment
Ans:    $env command

11)Did you notice something in the output of "env" command?
Ans: Using env, variables may be added or removed, and existing variables may be changed by assigning new values to them.

12)Which command is used to print the text or any variables value in the Console/Terminal?
Ans: $echo command is used to print the text or any variables

13)Print the value of the env variable "PATH" on the console
Ans: $printenv command.

14)Is linux a case-sensitive operating system?
Ans:Yes, as linux treats capitalized letters and lower-case letters as different characters.

15)Is, "Ls" same as "ls"?
Ans:  ls lists the contents of directory. Ls is not a command

16)Display your currently logged in user
Ans:$whoami is command to display current logged in user 

17)how do you change the currrently logged in user to another user?
Ans: su –l [other_user] command

18)Which command is used to leave a shell environment that you are currently logged in to?
Ans:    $exit command also you can enter cntrl D button to exit.

19)How do you reboot the system?
Ans:  $sudo reboot command.

20)How do you shutdown the system?
Ans: $sudo shutdown command.

21)Display all the major running processes in the system
Ans: ps -A
 PID TTY          TIME CMD
     1 ?        00:00:00 init
     7 ?        00:00:00 sh
     8 ?        00:00:05 node
     20 ?        00:00:00 sshd
  142 tty1     00:00:00 init
  143 tty1     00:00:00 bash
  169 tty1     00:00:00 ps

22)Understand the output of command used in above question of displaying processes, explain the meaning of each column and what data it displays?
Ans: a)PID - The process ID. Usually, when running the ps command, the most important information the user is looking for is the process PID
        b)TTY - The name of the controlling terminal for the process.
        c)TIME - The cumulative CPU time of the process, shown in minutes and seconds.
       d)CMD - The name of the command that was used to start the process.

23)Display the name of the system kernel
Ans:  $uname -s

24)display the kernel release number
Ans: $uname -r

25)display teh machine type of the current kernel
Ans: $uname -m

26)Display the name of the operating system that the kernel is running on
Ans: $uname -o

27)Display all info that uname command can show.
Ans:  $uname -a

28)Display the name of directory that you are currently pointing to
Ans:  pwd

29)change the current directory to another directory that you have in your system.
Ans: $cd

30)Go up one directory
Ans: $cd ..

31)Return to last directory
Ans: $cd ../..

32)change the current directory to home(logged in user's) directory
Ans:$ udo usermod -d /usr/pratiksha pratiksha

33)How to check all the command used from the prompt (Command History)
Ans: $sudo useradd -m -d

34)In which file the history of commands are stored in?
Ans:Command history is stored in a file (.bash_history) in home directory.

35)How many lines of history does the system keep and from where you can change it?
Ans: 1000 lines of history  $echo $HISTFILE
 
36)How can you modify bash's history behaviour
Ans:$HISTSIZE and $HISTTIMEFORMAT

37)Display all the commands entered so far, now, try to run a particular command from the history list without typing that command.
Ans: history command and can use the upper arrow to run particular command.
NOTE:- TAB key is your friend when it comes to command completion and having long file and directory names autocompleted at the bash prompt for you. JUST BE LAZY AND USE TAB KEY FOR AUTO COMPLETION ;-)

38)What are the different types of shell and where are they used and how do we use them?
Ans:1.C shell (csh)-/bin/csh.
      2.Bourne Shell (sh)-/bin/sh and /sbin/sh.
      3.Korn shell (ksh)-/bin/ksh
      4.Bourne Again shell ( bash)-/bin/bash

39)What is the difference between login shell and non-login shell?
Ans:ANS:Login shell output will be -bash or -su.
      Non logins shell output will be bash or su

40)How do we start login shell and non-login shell?
Ans: A Login shell is started after a successful login, using /bin/login, by reading the /etc/passwd file. A Non login shell is started by a program without a login.The program just passes the name of the shell executable.

41)What happens when you start a login shell (which files are read and used and Why)?
Ans: Login process calls ~/.bash_profile

42)What happens when you start a non-login shell (Which files are read and used and Why)?
Ans: Non-login process(shell) calls ~/.bashrc
 
43)What are Shell Configuration Files, why do we need it?
Ans: They initialize and configure a shell upon login and. perform cleanup operations upon logout and used for user applications, server processes and operating system settings.

44)Explain the Order of file usage from the system/user's home directory when user logs in to the System.
Ans: /etc/profile->/etc/profile.d->~/.bash_profile->~/.bashrc->etc/bashrc

45)What are Shell Variables, list major shell variables and what do they represent?
Ans: Variables store the data in the form of characters and numbers.Shell variables are used to store information and they can by the shell only.
      "variable_name=variable_value". For example, the command "set FILE_NAME=file1" creates the shell variable named "FILE_NAME" with a value of "file1".

46)How we see all our env variables?
Ans:  printenv | more

47)How we see all env variables in alphabical order?
Ans: printenv | sort

48)What Format does the env var and its values are stored?
Ans:  Key value pair

49)How do you create your own varible?
Ans:variable_name=variable_value 

50)How do you start a new bash shell?
Ans: first make file like vi filename.sh edit some text in file with first line #!/bin/sh save text then use bash filename.sh

51)Difference between Local/Shell variables to Global Variable
Ans: Local variable is declared inside a function whereas Global variable is declared outside the function. Local variables are created when the function has started execution and is lost when the function terminates, on the other hand, Global variable is created as execution starts and is lost when the program ends.

52)Making a variable accessible from other the shell in the system.
Ans: ~/.profile

53)Show the real life use case of exporting a variable
Ans: i) You can export a variable from parent process to the child processes. 
      ii) Simply set the value for a variable before exporting " export name="[=value]"
      iii) export -p to check the exported variables

54)Convert the above script file into a command, The file should run with "myappp" instead of "myapp.sh"
Ans:- Give execution rights to the script file using chmod u+x file_name.sh
     - Append the path of the exectuable script file to path cariable in .bash_profile file
     - Write a code in script file starting with shebang "#!/usr/bin/env bash" and then save it.
     - Now you need to source .bash_profile once then you can run your myapp.sh as a command.

55)What is Globbing? Explain in depth with examples?
Ans:Globbing is an operation that recognizes the wildcard pattern and expands it into its path name.

56)List all entries with extension ".sh"
Ans: ls *.sh

57)List all entries with numbers in it.
Ans: ./line_count.sh file1.txt

58)List all entries that starts with a character and ends with a number
Ans: egrep "[a-z][0-9]" small.txt

59)List all entries that name length more than 5 characters
Ans: ls ??????*

60)What is Quoting? and Why do we need it?
Ans:Quoting is used to remove the special meaning of certain characters or words to the shell. Quoting can be used to disable special treatment for special characters, to prevent reserved words from being recognized as such, and to prevent parameter expansion.

61)Write few(minimum 3) unique examples that shows, how a particular problem is solved using Quoting.
Ans:1. echo 'Welcome to coding world!'-this will easily print the line.
       2. echo  hello to learning/
                lets start learning/ - continuous writing
                with coding.
       3. echo 'hello/'
62)How do you find a particular files/directories based on a particular search criteria?
Ans:  find <parameters> ex: find *.txt
HINT:- look for commands -> locate, find and whereis

63)Write major difference between locate, find and whereis?
Ans: locate simply looks its database and reports the file location whereas find does not use a database, it traverses all the directories and their sub directories and looks for files matching the given criterion and whereis commands only give the location of installed application.

64)How Globbing is different from locate, find and whereis?
Ans:Globbing is mainly used to match filenames or searching for content in a file.locate simply looks its database and reports the file location whereas find does not use a database, it traverses all the directories and their sub directories and looks for files matching the given criterion and whereis commands only give the location of installed application. 

65)Explain the Linux File System.
Ans: file system  makes a table which stores data about files(and folders) like File name. When it was created. When it was modified. Who owns it. Who are allowed to access it

66)Explain absolute and Relative Paths
Ans:Absolute path starts from the directory root (/) and goes up to the actual object (file or directory). ex:/root/home/Anjali/index.
      Relative path starts from the current directory and goes up to the actual object. ex:../../file-user want to access a file that is available two directories above.

67)What are the different ways of creating a File in linux System? Write an example of each and the difference between them.
Ans:touch filename-  easiest way to create a new file in Linux is by using the touch command. ex: touch index.txt.
       >filename- redirection operator is a name for a character that changes the destination where the results are displayed. ex: >file1.txt.
       cat>filename-cat command is short for concatenate. It can be used to output the contents of several files, one file, or even part of a file. ex: cat> file2.txt
       echo'sample text'> filename-echo command will duplicate whatever you specify in the command, and put the copy into a file. ex:echo 'Hello'file3.txt
68)In how many ways we can delete the files from linux system? write an example of each and teh difference between them.
Ans: rm filename- remove particular file, unlink filename- this also removes single file, rm *.html- this will delete all the files of html, rm filename1 filename2 filename3-this will remove multiple files.

69)Archiving files using linux command, write a command to archive set of files from linux commands.
Ans:  tar -cvf myfiles.tar file1 file2

70)Extract the archived files from the above step.
Ans:tar -xvf myfiles.tar